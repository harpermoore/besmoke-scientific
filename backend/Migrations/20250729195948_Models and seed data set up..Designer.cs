// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250729195948_Models and seed data set up.")]
    partial class Modelsandseeddatasetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Domain.InventoryOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityChange")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("InventoryOperations");
                });

            modelBuilder.Entity("backend.Models.Domain.InventoryStatus", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("InventoryStatuses");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("b1a2b345-1111-4c7f-a111-1234567890ab"),
                            Quantity = 30
                        },
                        new
                        {
                            ProductId = new Guid("b1a2b345-2222-4c7f-a222-1234567890ab"),
                            Quantity = 20
                        },
                        new
                        {
                            ProductId = new Guid("b1a2b345-3333-4c7f-a333-1234567890ab"),
                            Quantity = 30
                        },
                        new
                        {
                            ProductId = new Guid("b1a2b345-4444-4c7f-a444-1234567890ab"),
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("backend.Models.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SizeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1a2b345-1111-4c7f-a111-1234567890ab"),
                            MaterialId = 1,
                            Name = "250 mL Glass Erlenmeyer Flask",
                            SizeId = 4,
                            TypeId = 1
                        },
                        new
                        {
                            Id = new Guid("b1a2b345-2222-4c7f-a222-1234567890ab"),
                            MaterialId = 2,
                            Name = "50 mL Plastic Vial",
                            SizeId = 3,
                            TypeId = 4
                        },
                        new
                        {
                            Id = new Guid("b1a2b345-3333-4c7f-a333-1234567890ab"),
                            MaterialId = 1,
                            Name = "1 L Glass Dewar Flask",
                            SizeId = 6,
                            TypeId = 2
                        },
                        new
                        {
                            Id = new Guid("b1a2b345-4444-4c7f-a444-1234567890ab"),
                            MaterialId = 2,
                            Name = "10 mL Plastic Beaker",
                            SizeId = 2,
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("backend.Models.Domain.ProductMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProductMaterials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Glass"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Plastic"
                        });
                });

            modelBuilder.Entity("backend.Models.Domain.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProductSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1 mL"
                        },
                        new
                        {
                            Id = 2,
                            Name = "10 mL"
                        },
                        new
                        {
                            Id = 3,
                            Name = "50 mL"
                        },
                        new
                        {
                            Id = 4,
                            Name = "250 mL"
                        },
                        new
                        {
                            Id = 5,
                            Name = "500 mL"
                        },
                        new
                        {
                            Id = 6,
                            Name = "1 L"
                        });
                });

            modelBuilder.Entity("backend.Models.Domain.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Erlenmeyer Flask"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dewar Flask"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Beaker"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Vial"
                        });
                });

            modelBuilder.Entity("backend.Models.Domain.InventoryOperation", b =>
                {
                    b.HasOne("backend.Models.Domain.Product", "Product")
                        .WithMany("InventoryOperations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("backend.Models.Domain.InventoryStatus", b =>
                {
                    b.HasOne("backend.Models.Domain.Product", "Product")
                        .WithOne("InventoryStatus")
                        .HasForeignKey("backend.Models.Domain.InventoryStatus", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("backend.Models.Domain.Product", b =>
                {
                    b.HasOne("backend.Models.Domain.ProductMaterial", "ProductMaterial")
                        .WithMany("Products")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Domain.ProductSize", "ProductSize")
                        .WithMany("Products")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Domain.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductMaterial");

                    b.Navigation("ProductSize");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("backend.Models.Domain.Product", b =>
                {
                    b.Navigation("InventoryOperations");

                    b.Navigation("InventoryStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Models.Domain.ProductMaterial", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("backend.Models.Domain.ProductSize", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("backend.Models.Domain.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
